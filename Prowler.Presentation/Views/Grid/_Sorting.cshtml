@using Prowler.Mvc.UI
@using Prowler.Presentation.Models
@model Prowler.Presentation.Models.MockProduct

<h3>Sorting</h3>

<h5>The current demo of the UI for ASP.NET MVC Grid demonstrates an implementation of displaying data in the grid and apply sorting on column headers.</h5>

<br />
<h4>DEMO EXAMPLE</h4>
<div style="padding-top:10px;">
    <div>
        @(Html.Prowler().Grid()
            .BindTo(Model.ProductDataSource)
            .HtmlAttributes("id", "productGrid")
            .Height(450)
            .Columns(
                    i => i.BindTo(nameof(Product.Id)).Title("ID").Sorting("idOrderBy"),
                    i => i.BindTo(nameof(Product.Name)).Title("Name").Width(250).Sorting("nameOrderBy"),
                    i => i.BindTo(nameof(Product.Description)).Title("Description").Sorting("descriptionOrderBy"),
                    i => i.BindTo(nameof(Product.GroupName)).Title("Type").Sorting("typeOrderBy")
                    )
            .ActionSort("/Grid/GetPageSortedBy")
            .Render()
 )
    </div>

    @{
        string basicCode = @"@(Html.Prowler().Grid()
.BindTo(Model.ProductDataSource)
.HtmlAttributes(""id"", ""productGrid"")
.Height(450)
.Columns(
      i => i.BindTo(nameof(Product.Id)).Title(""ID"").Sorting(""idOrderBy""),
      i => i.BindTo(nameof(Product.Name)).Title(""Name"").Width(250).Sorting(""nameOrderBy""),
      i => i.BindTo(nameof(Product.Description)).Title(""Description"").Sorting(""descriptionOrderBy""),
      i => i.BindTo(nameof(Product.GroupName)).Title(""Type"").Sorting(""typeOrderBy"")
    )
.ActionSort(""/Grid/GetPageSortedBy"")
.Render()
)";

    }

    @{
        string controllerCode = @"public ActionResult GetPageSortedBy(GridDataSourceRequest<Product> request,
    string idOrderBy, string nameOrderBy, string descriptionOrderBy, string typeOrderBy)
{
    var list = MockHelper.GetMockProducts(idOrderBy, nameOrderBy, descriptionOrderBy, typeOrderBy).ToList();
    var datasouce = new GridDataSourceResponse<Product>
    {
        DataSource = list
    };
    
    return Json(datasouce);
}";

    }
    <br />
    <h4>VIEW CODE</h4>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@basicCode</code>
    </div>
    <br />
    <div class="infoTipContainer">
    <span class="dot">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-info" viewBox="0 0 16 16" id="IconChangeColor"> <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" id="mainIconPathAttribute" fill="black"></path> </svg>
    </span>
        <h5>The <strong>Sorting</strong> method parameter value will be used with POST, the value will be the parameter name sent in the request.</h5>
    </div>
    <div class="infoTipContainer">
        <span class="dot">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-info" viewBox="0 0 16 16" id="IconChangeColor"> <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" id="mainIconPathAttribute" fill="black"></path> </svg>
        </span>
        <h5>The <strong>ActionSort </strong>method parameter value will be the URL used for POST.</h5>
    </div>
    
    <br />
    <h4>CONTROLLER CODE</h4>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@controllerCode</code>
    </div>
</div>
<br />
@Html.Partial("_GridRequestResponse")
<br/>
@Html.Partial("_GridColumMethods")