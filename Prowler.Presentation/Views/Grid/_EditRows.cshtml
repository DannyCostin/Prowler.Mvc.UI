@using Prowler.Mvc.UI
@using Prowler.Presentation.Models
@model Prowler.Presentation.Models.MockProduct

<h3>Edit Rows</h3>

<h5>The current demo of the UI for ASP.NET MVC Grid demonstrates an implementation of displaying data in the grid with editable rows.</h5>

<br />
<h5>DEMO EXAMPLE</h5>
<div style="padding-top:10px;">
    <div>
        @(Html.Prowler().Grid()
            .BindTo(Model.ProductDataSource)
            .UniqueId(nameof(Product.Id))
            .HtmlAttributes("id", "productGrid")
            .Height(450)
            .Columns(
                    i => i.BindTo(nameof(Product.Id)).Title("ID"),
                    i => i.BindTo(nameof(Product.Name)).Title("Name").Width(250),
                    i => i.BindTo(nameof(Product.Description)).Title("Description").AsEditable(GridInputType.Text),
                    i => i.BindTo(nameof(Product.GroupName)).Title("Type"),
                    i => i.BindTo(nameof(Product.Checked)).AsEditable(GridInputType.CheckBox).HeaderAsCheckBox()
                    )
            .Render()
 )
    </div>

    @{
        string basicCode = @"@(Html.Prowler().Grid()
.BindTo(Model.ProductDataSource)
.UniqueId(nameof(Product.Id))
.HtmlAttributes(""id"", ""productGrid"")
.Height(450)
.Columns(
  i => i.BindTo(nameof(Product.Id)).Title(""ID""),
  i => i.BindTo(nameof(Product.Name)).Title(""Name"").Width(250),
  i => i.BindTo(nameof(Product.Description)).Title(""Description"").AsEditable(GridInputType.Text),
  i => i.BindTo(nameof(Product.GroupName)).Title(""Type"").AsEditable(GridInputType.CheckBox).HeaderAsCheckBox()
)
.Render()
)";

    }
    <br />
    <h4>VIEW CODE</h4>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@basicCode</code>
    </div>
    <br />
    <div class="infoTipContainer">
        <span class="dot">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-info" viewBox="0 0 16 16" id="IconChangeColor"> <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" id="mainIconPathAttribute" fill="black"></path> </svg>
        </span>
        <h5>When working with edit rows the method <strong>UniqueId(string)</strong> is required, use the <strong>UniqueId(string)</strong> method to specify a property from the data source that contains a unique value.</h5>
    </div>
    <br />
    <h5><strong>AsEditable</strong> method defines the type of editorial control to render.</h5>
</div>
<br />
<h3>Columns Methods</h3>
<div style="padding:0px; margin-top:10px; border-radius:5px">
    <table class="tableStyle" style="width:100%">
        <tr>
            <th>Method name</th>
            <th>Description</th>
        </tr>
        <tr>
            <td>BindTo(string)</td>
            <td>Sets the property from the data source (Model) for this cell, the value will be displayed on the cell</td>
        </tr>
        <tr>
            <td>Title(string)</td>
            <td>Sets the Title of the column header</td>
        </tr>
        <tr>
            <td>Width(int)</td>
            <td>Sets the width of the column header</td>
        </tr>
        <tr>
            <td>Sorting(string)</td>
            <td>Enables the sorting on the column header and sets the name of parameter to use on POST the value sent can be "asc" or "desc"</td>
        </tr>
        <tr>
            <td>AsEditable(Prowler.Mvc.UI.GridInputType)</td>
            <td>Sets the type of editable control to render on the cell</td>
        </tr>
        <tr>
            <td>AsReadOnly(string)</td>
            <td>Sets the editable control as read only, bollean property from the data source can be bound to set the control as read only state based on the property value</td>
        </tr>
        <tr>
            <td>RowTemplate(string)</td>
            <td>ValueTemplate to be used to render the cell value.</td>
        </tr>
        <tr>
            <td>RowTemplate(MvcHtmlString)</td>
            <td>ValueTemplate to be used to render the cell value</td>
        </tr>
        <tr>
            <td>ColumnTemplate(string)</td>
            <td>ValueTemplate to be used to render the cell value</td>
        </tr>
        <tr>
            <td>ColumnTemplate(MvcHtmlString)</td>
            <td>ValueTemplate to be used to render the cell value</td>
        </tr>
        <tr>
            <td>HtmlAttributes(string, string)</td>
            <td>Sets the HTML attributes, can be used multiple times to add new attributes</td>
        </tr>
        <tr>
            <td>HeaderAsCheckBox(string, bool)</td>
            <td>Sets an editable check box control on the column header</td>
        </tr>
    </table>
</div>
