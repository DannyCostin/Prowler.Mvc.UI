@using Prowler.Mvc.UI
@using Prowler.Presentation.Models
@model Prowler.Presentation.Models.MockProduct

<h3>Server Filtering</h3>
<h5>The current demo of the UI for ASP.NET MVC DropDownList demonstrates an implementation of adding search capability on the server side.</h5>
<br />

<h5><strong>ServerFiltering(string, string, int)</strong> parameters:</h5>

<div style="padding:0px; margin-top:10px; border-radius:5px">
    <table class="tableStyle" style="width:100%">
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        <tr>
            <td>url</td>
            <td>Sets the URL to POST.</td>
        </tr>
        <tr>
            <td>parameterName</td>
            <td>Sets the name of the parameter to POST, this parameter will hold the search value.</td>
        </tr>
        <tr>
            <td>delay</td>
            <td>Sets the search delay in milliseconds, controls the user input search box type delay before POST, the default value is 500.</td>
        </tr>
    </table>
</div>

<div style="background-color:yellowgreen;padding:20px; margin-top:15px; border-radius:5px">
    <h5><strong>Note:</strong> It is also possible to post additional information by using the API method <strong>serverFilterParameterAdd</strong> as shown in the JAVASCRIPT CODE example.</h5>
</div>



<br />

<h5>DEMO EXAMPLE</h5>
<div style="padding-top:10px">
    @(Html.Prowler().DropDownList()
          .BindTo(Model.ProductDataSource)
          .DataTextField(nameof(Product.Name))
          .DataValueField(nameof(Product.Id))
          .HtmlAttributes("style", "width:400px")
          .HtmlAttributes("id", "serverFilter")
          .ServerFiltering(@"/DropDownList/Search", "value")
          .SelectedIndex(0)
          .Event(EventDropDown.Open, "openEvent")
          .Render()

    )
    <br />

    <script>
        function openEvent() {
            var data = { customFilter: 'customValue' };
            prowlerDropDown('serverFilter').serverFilterParameterAdd(data);
        }</script>

    @{
        string serverFiltering = @"@(Html.Prowler()
.BindTo(Model.ProductDataSource)
.DataTextField(nameof(Product.Name))
.DataValueField(nameof(Product.Id))
.HtmlAttributes(""style"", ""width: 400px"")
.HtmlAttributes(""id"", ""serverFilter"")
.ServerFiltering(@""/DropDownList/Search"", ""value"")
.SelectedIndex(0)
.Event(EventDropDown.Open, ""openEvent"")
.Render()
)";

        string serverFilteringJS = @"<script>
function openEvent() {
    var data = { customFilter: 'customValue' };
    prowlerDropDown('serverFilter').serverFilterParameterAdd(data);
}
</script>";

        string serverFilteringCT = @"public JsonResult Search(string value, string customFilter)
{
    value = value?.ToLower() ?? string.Empty;
    var model = MockHelper.GetMockProducts();
    model.ProductDataSource = model.ProductDataSource.Where(i => i.Name.ToLower().Contains(value)).ToList();

    return Json(model.ProductDataSource);
}
";

    }
    <br />
    <h5>VIEW CODE</h5>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@serverFiltering</code>
    </div>

    <br />
    <h5>JAVASCRIPT CODE</h5>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@serverFilteringJS</code>
    </div>

    <br />
    <h5>CONTROLLER CODE</h5>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@serverFilteringCT</code>
    </div>
</div>