@using Prowler.Mvc.UI
@using Prowler.Presentation.Models
@model Prowler.Presentation.Models.MockProduct

<h3>Customizing templates</h3>
<h5>The demo shows a sample scenario for using the DropDownList for ASP.NET MVC where you can bind the component to a list of values and make a selection from the available options.</h5>

<br />

<h5>DEMO EXAMPLE</h5>
<div style="padding-top:10px">

    @(Html.Prowler().DropDownList()
          .BindTo(Model.ProductDataSource)
          .DataTextField(nameof(Product.Name))
          .DataValueField(nameof(Product.Id))
          .HtmlAttributes("style", "width:500px")
          .SelectedIndex(0)
          .Height(400)
          .Template(Html.Partial("DropDownItem"), nameof(Product.Name),nameof(Product.Description), nameof(Product.Image))
          .Render()
    )

    @{
        string templateCode = @"@(Html.Prowler()
.DropDownList()
.BindTo(Model.ProductDataSource)
.DataTextField(nameof(Product.Name))
.DataValueField(nameof(Product.Id))
.SelectedIndex(0)
.Template(
@""<div style=""position:relative; margin:10px"">
<table>
    <tbody>
        <tr>
            <td valign=""top"">
                <img style=""border-radius:50%;height:45px; width:45px; margin:2px"" src= ""{#Image#}"" />
            </td>
            <td>
                <p style=""margin:5px;"">{#Name#}</p>
                <p style=""margin-left:5px;margin-top:-5px;font-size:10px;"">{#Description#}</p>
            </td>
        </tr>
       </tbody>
</table>
</div>"", nameof(Product.Name),nameof(Product.Description), nameof(Product.Image)
)
.Render())";

        string templatePartialCode = @"@(Html.Prowler()
.DropDownList()
.BindTo(Model.ProductDataSource)
.DataTextField(nameof(Product.Name))
.DataValueField(nameof(Product.Id))
.SelectedIndex(0)
.Template(Html.Partial(""DropDownItem""), nameof(Product.Name), nameof(Product.Description), nameof(Product.Image))
.Render())";

    }
    <br />
    <h5>VIEW CODE</h5>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@templateCode</code>
    </div>

</div>

<h5>Binding value in the template requires the property name found in the model to be wrapped in <strong>{##}</strong> example {#Description#} the model contains a property named Description the value will be binded at runtime by the binding mechanism</h5>
<h5>The <strong>Template</strong> method has a template parameter and a binding parameter, the template parameter can be a string or an html string rendered from a partial view, the bindings parameter contains the property names from the model that are used in the template</h5>


<br />
<h5>VIEW CODE - RENDERING FROM PARTIAL VIEW</h5>
<div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
    <code style="white-space:pre; display:block; margin:10px">@templatePartialCode</code>
</div>