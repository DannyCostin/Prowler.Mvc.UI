@using Prowler.Mvc.UI
@using Prowler.Presentation.Models
@model Prowler.Presentation.Models.MockProduct

<h3>Client filtering</h3>
<h5>The demo shows a sample scenario for using the DropDownList for ASP.NET MVC where you can bind the component to a list of values and make a selection from the available options.</h5>

<br />

<h5>DEMO EXAMPLE</h5>
<div style="padding-top:10px">
    @(Html.Prowler().DropDownList()
          .BindTo(Model.ProductDataSource)
          .DataTextField(nameof(Product.Name))
          .DataValueField(nameof(Product.Id))
          .HtmlAttributes("style", "width:400px")
          .SelectedIndex(0)
          .ClientFiltering(nameof(Product.Name))
          .Render()
    )

    @{
        string clientFilteringCode = @"@(Html.Prowler()
.DropDownList()
.BindTo(Model.ProductDataSource)
.DataTextField(nameof(Product.Name))
.DataValueField(nameof(Product.Id))
.SelectedIndex(0)
.ClientFiltering(nameof(Product.Name))
.Render())";

    }
    <br />
    <h5>VIEW CODE</h5>
    <div style="background-color:whitesmoke;padding:20px; margin-top:10px; border-radius:5px">
        <code style="white-space:pre; display:block; margin:10px">@clientFilteringCode</code>
    </div>
</div>

<h5><strong>ClientFiltering</strong> method has a binding paramater, set the binding parameter value to a property name that belongs to the model, the search will be performed on the binding property value</h5>
